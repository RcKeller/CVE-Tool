import { Router } from 'express'
/*
CORE RESTful CONTROLLER:
Every model adheres to this interface as a baseline.
After extending, each controller may have certain overrides
(saving subdocuments, server-side business logic, etc)

http://rvcode.com/javascript/2016/01/02/generic-crud-controller-with-mongoose-and-express.html
*/
export default class REST {
  base = 'https://access.redhat.com/labs/securitydataapi'
  // Returns a function that will write the result as a JSON to the response
  ok (res) {
    return (data) => res.json(data)
  }

  /**
  Error handler
  */
  fail (res) {
    return (error) => {
      console.error(error)
      res.sendStatus(error.status || 404).end()
    }
  }

  /* *****
    GET (All): List all models
    https://stackoverflow.com/questions/33455507/javascript-conditionally-call-a-function
  ***** */
  getAll (query) {
    return Promise.resolve([])
      .then(value => value)
  }

  get (id, query) {
    console.log('Got model id', id)
    return Promise.resolve({})
      .then(value => value)
  }

  /*
  INIT ROUTES
  Once initialized, you can use() your model directly after construction, e.g.:
  app.use('/v1/blocks', new controllers.Blocks().api())
  */
  API () {
    const router = new Router()
    //  READ
    router.get('/',
      (req, res) => {
        this
          .getAll(req.query)
          .then(this.ok(res))
          .then(null, this.fail(res))
      })
    router.get('/:key',
      (req, res) => {
        this
          .get(req.params.key, req.query)
          .then(this.ok(res))
          .then(null, this.fail(res))
      })

    return router
  }
}
