import React from 'react'
import PropTypes from 'prop-types'
import Helmet from 'react-helmet'
import { compose } from 'redux'
import { connect } from 'react-redux'
import { connectRequest } from 'redux-query'

import api from '../../services'
import { Loading } from '../../components'

// import Summary from './Summary/Summary'
// import Table from './Table/Table'

import {
  DataTable,
  TableHeader,
  TableBody,
  TableRow,
  TableColumn
} from 'react-md'

@compose(
  connect(state => ({
    ...state.db.cve
  })),
  connectRequest(props => (
    api.get('cve', props.params.id)
  ))
)
class CVE extends React.Component {
  static propTypes = {
    name: PropTypes.string,
    cwe: PropTypes.string,
    threat_severity: PropTypes.string,
    public_date: PropTypes.string,  // "2017-09-14T00:00:00"
    statement: PropTypes.string,
    mitigation: PropTypes.string,
    upstream_fix: PropTypes.string,
    cvss3: PropTypes.shape({
      cvss3_base_score: PropTypes.string, //  Number
      cvss3_scoring_vector: PropTypes.string,
      status: PropTypes.string
    }),
    bugzilla: PropTypes.shape({
      id: PropTypes.string, //  Number
      description: PropTypes.string,
      url: PropTypes.string
    }),
    details: PropTypes.array,
    package_state: PropTypes.arrayOf(PropTypes.shape({
      product_name: PropTypes.string,
      fix_state: PropTypes.string,
      package_name: PropTypes.string,
      cpe: PropTypes.string
    }))
  }
  static defaultProps = {}
  render (
    { name, cwe, public_date, threat_severity, statement, mitigation, upstream_fix, cvss3, bugzilla, details, package_state } = this.props
  ) {
    const { cvss3_base_score, cvss3cvss_scoring_vector, status } = cvss3 || {}
    const { id, description, url } = bugzilla || {}
    const { product_name, fix_state, package_name, cpe } = package_state || {}
    return (
      <article>
        <Helmet title={`CVE ${name}`} />
        <Loading render={name} title='CVE View' tip='Loading CVE...'>
          <section>
            <h1>
              <span>
                {`${name} - ${threat_severity}`}
              </span>
              <span style={{ float: 'right' }}>
                {public_date && new Date(public_date).toLocaleDateString('en-US')}
              </span>
            </h1>
            <h2>{cwe}</h2>
            <hr />
            <h3>Description</h3>
            <p>{description}</p>
            {details && <p>{details.join('\n')}</p>}
            <h3>Affected Systems</h3>
            <DataTable plain>
              <TableHeader>
                <TableRow>
                  <TableColumn>Product</TableColumn>
                  <TableColumn>Package</TableColumn>
                  <TableColumn>Fix State</TableColumn>
                  <TableColumn>CPE</TableColumn>
                </TableRow>
              </TableHeader>
              <TableBody>
                {package_state && package_state.map((p, i) => (
                  <TableRow key={i}>
                    <TableColumn>{p.product_name}</TableColumn>
                    <TableColumn>{p.package_name}</TableColumn>
                    <TableColumn>{p.fix_state}</TableColumn>
                    <TableColumn>{p.cpe}</TableColumn>
                  </TableRow>
                ))}
              </TableBody>
            </DataTable>
            <h3>Mitigation</h3>
            <p>{statement}</p>
            <p>{mitigation}</p>
            <h3>Fixes</h3>
            {upstream_fix
              ? <ul>
                {upstream_fix.split(', ').map((fix, i) => (
                  <li key={i}>{fix}</li>
                ))}
              </ul>
              : <p>Not Available.</p>
            }
          </section>
        </Loading>
      </article>
    )
  }
}

export default CVE
